name: Build and Release Native Installers

# This workflow runs when a tag is pushed that starts with 'v' (e.g., v1.0, v1.2.1)
on:
  push:
    tags:
      - 'v*'

jobs:
  build-native-installers:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Build for all supported OSes
      matrix:
        include:
          - os: ubuntu-latest
            installer_type: deb
            asset_ext: .deb
          - os: macos-latest
            installer_type: dmg
            asset_ext: .dmg
          - os: windows-latest
            installer_type: msi
            asset_ext: .msi

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install jpackage dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot

      - name: Build with Maven
        # This command builds the project and tells jpackage which installer to create
        run: mvn -B package --file pom.xml -Dinstaller.type=${{ matrix.installer_type }}

      - name: Rename artifact
        # Renames the installer to include the OS, e.g., VoorraadApp-windows.msi
        run: |
          mv target/*${{ matrix.asset_ext }} target/VoorraadApp-${{ matrix.os }}${{ matrix.asset_ext }}
        shell: bash

      - name: Upload artifact
        # Uploads the installer to be used in the 'release' job
        uses: actions/upload-artifact@v4

        with:
          name: VoorraadApp-${{ matrix.os }}
          path: target/VoorraadApp-${{ matrix.os }}${{ matrix.asset_ext }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-native-installers # This job runs only after all builds are successful
    permissions:
      contents: write # Required to create a release

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        # This action creates a new release and attaches all the downloaded installers
        uses: softprops/action-gh-release@v2
        with:
          # The body of the release will be auto-generated from your commit history
          generate_release_notes: true
          # The files to upload to the release
          files: artifacts/**/*